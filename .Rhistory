geom_point()
df <- data.frame(
indice <- 1:10,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 20
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 30
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 30
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- logb(n, t)
)
ggplot(df,aes(indice, valor))+
geom_point()
df <- data.frame(
indice <- 1:t,
valor <- log(n,t)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 10
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 20
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
t <- 25
n <- vector()
for(i in 1:t){
n[i] <- diagonais(i)
}
df <- data.frame(
indice <- 1:t,
valor <- log10(n)
)
ggplot(df,aes(indice, valor))+
geom_point()
ggplot(df,aes(indice, valor))+
geom_point()+
curve(x^2)
df$nomes[i] <- sample(1:n, n)
getwd()
dados <- read.table("titanic.txt", sep=",", header = T)
dados
str(dados)
dados$sex <- as.factor(dados$Sex)
dados$Survived <- as.factor(dados$Survived)
str(dados)
library(dplyr)
library(ggplot2)
dados |>
ggplo(aes(Survived))+
geom_col()
dados |>
ggplot(aes(Survived))+
geom_col()
ggplot(dados, aes(Survived))
ggplot(dados, aes(Survived))+
geom_col()
ggplot(dados, aes(Survived))+
geom_bar()
ggplot(dados, aes(Survived, fill = sex))+
geom_bar()
dados$Pclass <- as.factor(dados$Pclass)
ggplot(dados, aes(Survived, fill = sex))+
geom_bar()+
facet_wrap(~Pclass)
ggplot(dados, aes(Survived, fill = sex))+
geom_contour()
modeloSVM_rad <- svm(Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
library(ggplot2)
library(rpart)
library(rpart.plot)
library(randomForest)
library(e1071)
modeloSVM_rad <- svm(Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
modeloSVM_rad <- svm(Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
modeloSVM_rad <- svm(formula=Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
treino
modeloSvmLi <- svm(Diabetic~., data = treino)
library(ggplot2)
library(rpart)
library(rpart.plot)
library(randomForest)
library(e1071)
# Questão 1
pacientes <- read.table("diabetes.txt", TRUE, ";")
str(pacientes)
pacientes <- pacientes[,-1]
pacientes$Diabetic <- as.factor(pacientes$Diabetic)
n <- round(0.8*nrow(pacientes))
id <- sample(1:nrow(pacientes), n, FALSE)
treino <- pacientes[id,]
teste <- pacientes[-id,]
# a)
ggplot(treino, aes(Pregnancies, fill=Diabetic))+
geom_bar()
ggplot(treino, aes(Age, fill=Diabetic))+
geom_histogram(bins = 8)
ggplot(treino, aes(BMI, DiabetesPedigree, col=Diabetic))+
geom_point(alpha=0.5)
ggplot(treino, aes(Diabetic, PlasmaGlucose))+
geom_boxplot()
# 75% dos diabéticos possuem um indice de PlasmaGlucose maior que 50% dos não diabéticos
ggplot(treino, aes(Diabetic, DiastolicBloodPressure))+
geom_boxplot()
# Os não diabéticos possuem uma maior variação do DiastolicBloodPressure
ggplot(treino, aes(Diabetic, TricepsThickness))+
geom_boxplot()
# 25% dos não diabéticos possuem menos TricepsThickness que todos os diabéticos
ggplot(treino, aes(Diabetic, SerumInsulin))+  #
geom_boxplot()
# 25% dos diabéticos possuem mais SerumInsulin que 75% dos não diabéticos
ggplot(treino, aes(Diabetic, BMI))+ #
geom_boxplot()
# Os não diabéticos possuem maior variação do BMI
# 75% dos diabéticos possuem um BMI maior que 50% dos não diabéticos
ggplot(treino, aes(Diabetic, DiabetesPedigree))+
geom_boxplot()
# 25% dos diabéticos possuem mais DiabetesPedigree que 75% dos diabéticos
# b)
modeloArvore <- rpart(Diabetic~., treino, method = "class")
rpart.plot(modeloArvore, extra=101)
classifica <- function(pregnancies, BMI, serumInsulin, age) {
if(pregnancies < 2) {
return(0)
}else{
if(BMI < 22){
return(0)
}else{
if(serumInsulin >= 52){
return(1)
}else{
if(age < 36){
return(0)
}else{
return(1)
}
}
}
}
}
previsaoArvore <- vector()
for(i in 1:nrow(teste)){
previsaoArvore[i] <- classifca(teste$Pregnancies[i],
teste$BMI[i],
teste$SerumInsulin[i],
teste$Age[i])
}
for(i in 1:nrow(teste)){
previsaoArvore[i] <- classifica(teste$Pregnancies[i],
teste$BMI[i],
teste$SerumInsulin[i],
teste$Age[i])
}
mean(previsaoArvore == teste$Diabetic)
?randomForest
modeloFloresta <- randomForest(Diabetic~., treino)
previsaoFloresta <- predict(modeloFloresta, newdata = teste, type = "class")
mean(previsaoFloresta == teste$Diabetic)
# d)
modeloSvmLi <- svm(Diabetic~., data = treino)
previsaoSVM_li <- predict(modeloSvmLi, newdata=teste)
mean(previsaoSVM_li == teste$Diabetic)
modeloSVM_rad <- svm(Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
previsaoSVM <- predict(modeloSVM_rad, teste)
previsaoSVM_poly <- predict(modeloSVM_rad, teste)
mean(previsaoSVM_poly == teste$Diabetic)
tuneLi <- tune(svm,
train.x = treino[,-9],
train.y = treino$Diabetic,
kernel = "linear",
rages = list(cost = c(0.01, 0.1, 1 ,10, 100)))
tuneLi$best.model
previsaoSVM_li <- predict(tuneLi$best.model, newdata=teste)
previsaoSVM_li <- predict(tuneLi$best.model, newdata=teste[,-9])
mean(previsaoSVM_li == teste$Diabetic)
previsaoSVM_li <- predict(modeloSvmLi, newdata=teste[,-9])
mean(previsaoSVM_li == teste$Diabetic)
tuneLi <- tune(svm,
train.x = treino[,-9],
train.y = treino$Diabetic,
kernel = "linear",
rages = list(cost = c(0.01, 0.1, 1 ,2, 5, 10, 100)))
previsaoSVM_li <- predict(tuneLi$best.model, newdata=teste[,-9])
mean(previsaoSVM_li == teste$Diabetic)
tuneLi$best.model
previsaoSVM_rad <- predict(modeloSVM_rad, teste)
mean(previsaoSVM_rad == teste$Diabetic)
table(teste$Diabetic, previsaoArvore)
sum(teste$Diabetic)
teste$Diabetic
sum(teste$Diabetic == "0")
table(teste$Diabetic, previsaoArvore)
sum(teste$Diabetic == "1")
842+185
842 / (185 + 842)
table(teste$Diabetic, previsaoFloresta)
1885 + 116
sum(teste$Diabetic == "0")
1885 + 88
185 + 842
116 + 911
teste$Diabetic, previsaoFloresta
table(teste$Diabetic, previsaoFloresta)
acuraciaModelos <- as.data.frame(mogelo, geral, condicional)
acuraciaModelos <- as.data.frame(modelo, geral, condicional)
acuraciaModelos <- data.frame(modelo, geral, condicional)
acuraciaModelos <- data.frame(modelo, geral, condicional)
acuraciaModelos <- data.frame(modelo="modelos", geral="acuracia geral", condicional="acuraria condicional")
acuraciaModelos$modelo <- "Floresta"
acuraciaModelos$modelo
acuraciaModelos <- data.frame(modelo=vector(), geral=vector(), condicional=vector())
acuraciaModelos$modelo[1] <- "Arvore"
acuraciaModelos[1,1] <- "Arvore"
acuraciaModelos[2,1] <- mean(previsaoArvore == teste$Diabetic)
acuraciaModelos[2,1] <- "Floresta"
acuraciaModelos[2,2] <- mean(previsaoFloresta == teste$Diabetic)
acuraciaModelos[3,1] <- "Svm Linear"
acuraciaModelos[3,2] <- mean(previsaoSVM_li == teste$Diabetic)
acuraciaModelos[4,1] <- "Svm Polinomial"
acuraciaModelos[4,2] <- mean(teste$Diabetic == previsaoSVM_poly)
acuraciaModelos[5,1] <- "Svm Radial"
acuraciaModelos[5,2] <- mean(previsaoSVM_rad == teste$Diabetic)
acuraciaModelos
acuraciaModelos[1,2] <- mean(previsaoArvore == teste$Diabetic)
acuraciaModelos
table(teste$Diabetic, previsaoFloresta)
sum(teste$Diabetic == "1")
acuraciaModelos[3,2] <- 911 / 1027
table(teste$Diabetic, previsaoSVM_li)
acuraciaModelos[3,3] <- 620 / 1027
table(teste$Diabetic, previsaoSVM_poly)
acuraciaModelos[4,3] <- 783 / 1027
table(teste$Diabetic, previsaoSVM_rad)
acuraciaModelos[5,3] <- 783 / 1027
# f)
acuraciaModelos
table(teste$Diabetic, previsaoArvore)
acuraciaModelos[1,3] <- 842 / 1027
table(teste$Diabetic, previsaoFloresta)
acuraciaModelos[2,3] <- 911 / 1027
table(teste$Diabetic, previsaoSVM_li)
acuraciaModelos[3,3] <- 620 / 1027
table(teste$Diabetic, previsaoSVM_poly)
acuraciaModelos[4,3] <- 783 / 1027
table(teste$Diabetic, previsaoSVM_rad)
acuraciaModelos[5,3] <- 783 / 1027
# f)
acuraciaModelos
acuraciaModelos[1,2] <- mean(previsaoArvore == teste$Diabetic)
sta"
acuraciaModelos[2,2] <- mean(previsaoFloresta == teste$Diabetic)
Linear"
acuraciaModelos[3,1] <- "Svm Linear"
acuraciaModelos[3,2] <- mean(previsaoSVM_li == teste$Diabetic)
acuraciaModelos[4,1] <- "Svm Polinomial"
acuraciaModelos[4,2] <- mean(teste$Diabetic == previsaoSVM_poly)
acuraciaModelos[5,1] <- "Svm Radial"
acuraciaModelos[5,2] <- mean(previsaoSVM_rad == teste$Diabetic)
# f)
acuraciaModelos
previsaoSVM_poly <- predict(tunePoly$best.model, newdata = teste[,-9])
library(ggplot2)
library(rpart)
library(rpart.plot)
library(randomForest)
library(e1071)
# Questão 1
pacientes <- read.table("diabetes.txt", TRUE, ";")
str(pacientes)
pacientes <- pacientes[,-1]
pacientes$Diabetic <- as.factor(pacientes$Diabetic)
n <- round(0.8*nrow(pacientes))
id <- sample(1:nrow(pacientes), n, FALSE)
treino <- pacientes[id,]
teste <- pacientes[-id,]
# a)
ggplot(treino, aes(Pregnancies, fill=Diabetic))+
geom_bar()
ggplot(treino, aes(Age, fill=Diabetic))+
geom_histogram(bins = 8)
ggplot(treino, aes(BMI, DiabetesPedigree, col=Diabetic))+
geom_point(alpha=0.5)
ggplot(treino, aes(Diabetic, PlasmaGlucose))+
geom_boxplot()
# 75% dos diabéticos possuem um indice de PlasmaGlucose maior que 50% dos não diabéticos
ggplot(treino, aes(Diabetic, DiastolicBloodPressure))+
geom_boxplot()
# Os não diabéticos possuem uma maior variação do DiastolicBloodPressure
ggplot(treino, aes(Diabetic, TricepsThickness))+
geom_boxplot()
# 25% dos não diabéticos possuem menos TricepsThickness que todos os diabéticos
ggplot(treino, aes(Diabetic, SerumInsulin))+  #
geom_boxplot()
# 25% dos diabéticos possuem mais SerumInsulin que 75% dos não diabéticos
ggplot(treino, aes(Diabetic, BMI))+ #
geom_boxplot()
# Os não diabéticos possuem maior variação do BMI
# 75% dos diabéticos possuem um BMI maior que 50% dos não diabéticos
ggplot(treino, aes(Diabetic, DiabetesPedigree))+
geom_boxplot()
# 25% dos diabéticos possuem mais DiabetesPedigree que 75% dos diabéticos
# b)
acuraciaModelos <- data.frame(modelo=vector(), geral=vector(), condicional=vector())
modeloArvore <- rpart(Diabetic~., treino, method = "class")
rpart.plot(modeloArvore, extra=101)
classifica <- function(pregnancies, BMI, serumInsulin, age) {
if(pregnancies < 2) {
return(0)
}else{
if(BMI < 22){
return(0)
}else{
if(serumInsulin >= 52){
return(1)
}else{
if(age < 36){
return(0)
}else{
return(1)
}
}
}
}
}
previsaoArvore <- vector()
for(i in 1:nrow(teste)){
previsaoArvore[i] <- classifica(teste$Pregnancies[i],
teste$BMI[i],
teste$SerumInsulin[i],
teste$Age[i])
}
acuraciaModelos[1,1] <- "Arvore"
acuraciaModelos[1,2] <- mean(previsaoArvore == teste$Diabetic)
# c)
?randomForest
modeloFloresta <- randomForest(Diabetic~., treino)
previsaoFloresta <- predict(modeloFloresta, newdata = teste, type = "class")
acuraciaModelos[2,1] <- "Floresta"
acuraciaModelos[2,2] <- mean(previsaoFloresta == teste$Diabetic)
# d)
tuneLi <- tune(svm,
train.x = treino[,-9],
train.y = treino$Diabetic,
kernel = "linear",
rages = list(cost = c(0.01, 0.1, 1 ,2, 5, 10, 100)))
previsaoSVM_li <- predict(tuneLi$best.model, newdata=teste[,-9])
acuraciaModelos[3,1] <- "Svm Linear"
acuraciaModelos[3,2] <- mean(previsaoSVM_li == teste$Diabetic)
tunePoly <- tune(svm,
train.x = treino[,-9],
train.y = treino$Diabetic,
kernel = "polynomial",
rages = list(cost = c(0.01, 0.1, 1 ,10, 100),
degre = 1:4))
previsaoSVM_poly <- predict(tunePoly$best.model, newdata = teste[,-9])
acuraciaModelos[4,1] <- "Svm Polinomial"
acuraciaModelos[4,2] <- mean(teste$Diabetic == previsaoSVM_poly)
# Tune para núcleo radial não estava tendo êxito ao compilar
modeloSVM_rad <- svm(Diabetic~.,
data = treino,
kernel = "radial",
cost = 5,
gamma = 2)
previsaoSVM_rad <- predict(modeloSVM_rad, teste)
acuraciaModelos[5,1] <- "Svm Radial"
acuraciaModelos[5,2] <- mean(previsaoSVM_rad == teste$Diabetic)
# e)
sum(teste$Diabetic == "1")
table(teste$Diabetic, previsaoArvore)
acuraciaModelos[1,3] <- 842 / 1027
table(teste$Diabetic, previsaoFloresta)
acuraciaModelos[2,3] <- 911 / 1027
table(teste$Diabetic, previsaoSVM_li)
acuraciaModelos[3,3] <- 620 / 1027
table(teste$Diabetic, previsaoSVM_poly)
acuraciaModelos[4,3] <- 783 / 1027
table(teste$Diabetic, previsaoSVM_rad)
acuraciaModelos[5,3] <- 783 / 1027
# f)
acuraciaModelos
# Questão 2
olive <- read.table("olive.txt", T, sep=",")
str(olive)
unique(olive$region)
olive$region <- as.factor(olive$region)
summary(olive)
#a)
olivePadronizado <- scale(olive[,-1])
summary(olivePadronizado)
#b)
#k=3
modeloK3Means <- kmeans(olivePadronizado, centers = 3, nstart = 20 )
olive$cluster_k3 <- as.factor(modeloK3Means$cluster)
ggplot(olive, aes(x=cluster_k3, fill=region))+
geom_bar()
#c)
#k=4
modeloK4means <- kmeans(olivePadronizado, centers = 4, nstart = 20 )
olive$cluster_k4 <- as.factor(modeloK4means$cluster)
ggplot(olive, aes(x=cluster_k4, fill=region))+
geom_bar()
#k=5
modeloK5means <- kmeans(olivePadronizado, centers = 5, nstart = 20 )
olive$cluster_k5 <- as.factor(modeloK5means$cluster)
ggplot(olive, aes(x=cluster_k5, fill=region))+
geom_bar()
# f)
acuraciaModelos
olive <- read.table("olive.txt", T, sep=",")
str(olive)
unique(olive$region)
olive$region <- as.factor(olive$region)
summary(olive)
#a)
dados_padronizado <- scale(olive[,-1])
summary(dados_padronizado)
#b)
#k=3
modeloK3Means <- kmeans(dados_padronizado, centers = 3, nstart = 20 )
olive$cluster_k3 <- as.factor(modeloK3Means$cluster)
ggplot(olive, aes(x=cluster_k3, fill=region))+
geom_bar()
#c)
#k=4
modeloK4means <- kmeans(dados_padronizado, centers = 4, nstart = 20 )
olive$cluster_k4 <- as.factor(modeloK4means$cluster)
ggplot(olive, aes(x=cluster_k4, fill=region))+
geom_bar()
#k=5
modeloK5means <- kmeans(dados_padronizado, centers = 5, nstart = 20 )
olive$cluster_k5 <- as.factor(modeloK5means$cluster)
ggplot(olive, aes(x=cluster_k5, fill=region))+
geom_bar()
ggplot(olive, aes(x=cluster_k3, fill=region))+
geom_bar()
unique(olive$region)
ggplot(treino, aes(Age, fill=Diabetic))+
geom_histogram(bins = 8)
ggplot(treino, aes(BMI, DiabetesPedigree, col=Diabetic))+
geom_point(alpha=0.5)
ggplot(treino, aes(Pregnancies, fill=Diabetic))+
geom_bar()
ggplot(treino, aes(Age, fill=Diabetic))+
geom_histogram(bins = 8)
ggplot(olive, aes(x=cluster_k4, fill=region))+
geom_bar()
ggplot(olive, aes(x=cluster_k5, fill=region))+
geom_bar()
