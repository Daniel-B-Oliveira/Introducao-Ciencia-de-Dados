1+1 #soma
1-10 #subtracao
5*6
12/5 # divisao
3**4 #potencia
a
3^4 #potencia
**4 #potencia
3**4 #potencia
3^4 #potencia
1+1 #soma
1-10 #subtracao
5*76 #multiplicacao
12/5 #divisao
3**4 #potencia
3^4 #potencia
1+1
a <- 12/5
a
a <- 12/5
a
a*5
b <- a*5
b
a*teste <- 1
x1 <- 1
1x1 <- 1
_a <- 1
a <- 1
32+345 -> numero
numero
numero2 = 32+345
1+1 #soma
1-10 #subtracao
5*76 #multiplicacao
12/5 #divisao
3**4 #potencia
3^4 #potencia
a <- 12/5
b <- a*5
32+345 -> numero1
numero2 = 32+345
class(numero1)
w <- "ciencia"
class(w)
w <- "ciencia"
w
class(w)
w <- "ciencia"
w
class(w)
"
class(x
x <- "3"
x <- "3"
class(x)
1+1 #soma
1-10 #subtracao
5*76 #multiplicacao
12/5 #divisao
3**4 #potencia
3^4 #potencia
a <- 12/5
b <- a*5
32+345 -> numero1
class(numero1)
numero2 = 32+345 #não usar de preferencia
w <- "ciencia"
class(w)
x <- "3"
class(x)
y = TRUE
class(y)
y + 10
FALSE
class(y)
z+10
z = FALSE
class(y)
class(z)
z+10
LSE
= FALSE
FALSE
class(z)
z+10
y <- TRUE
1+1 #soma
1-10 #subtracao
5*76 #multiplicacao
12/5 #divisao
3**4 #potencia
3^4 #potencia
a <- 12/5
b <- a*5
32+345 -> numero1
class(numero1)
numero2 = 32+345 #não usar de preferencia
w <- "ciencia"
class(w)
x <- "3"
class(x)
y <- TRUE
class(y)
y + 10
z <- FALSE
class(z)
z+10
"teste"
t <- "teste"
<- "teste"
t
t <- "teste"
t
t <- "'teste"
t
c(3,12,43,567)
x <- c(3,12,43,567)
x <- c(3,12,43,567)
x
q <- c(1,21,34,123)
x+q
x <- c(3,12,43,567,1)
x+q
x <- c(3,12,43,567)
x + 10
x + c(10,20)
x + c(10,20,1)
x + c(10,20)
#Os vetores devem ser multiplos
x <- x + c(10, 20, 30)
x <- c(3,12,43,567)
c(1,2,'3')
x + c(10,20)  #Reciclagem: preencher o vetor maior com o menor
c(1,2,TRUE)
c(21,20,22,NA)    #NA: not avaliable
u <- c(11,22,33,44,55,66)
u[1]
u[3]
u[2,4]
u[2-4]
u[2??4]
u[2?4]
u[2:4]
u[2&4]
u[2&&4]
u[2!!4]
u[24]
u[2/4]
u[2|4]
u[2||4]
u[2+4]
u[c(2,4)]
u[c(2,4)]
u[c(2,4)]
u[0]
menor_30 <- u < 30
menor_30
u[u<30]
len(u)
u[c(u<30,u>10)]           #Seleciona endereços que atendem a condicao
u[c(u<30,u>20)]           #Seleciona endereços que atendem a condicao
u[u<30&&u>20]           #Seleciona endereços que atendem a condicao
u[u<30&u>20]           #Seleciona endereços que atendem a condicao
u[u < 30 | u > 20]           #Seleciona endereços que atendem a condicao
# ==
u[c(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)]
whitch(u<30)
which(u<30)
which(c(TRUE,FALSE,TRUE))
lengh(u)
lenght(u)
length(u)
length(which(u<30))
sum(u<30)       #Soma de vetores
#Vetores sequenciais
v1 <- 100:557
100:570
